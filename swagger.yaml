tags:
  - name: users
    description: users API

paths:
  # [GET] users
  /users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: "OK"
        500:
          description: "Server Error"

    # [POST] users
    post:
      tags:
        - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: "#/definitions/users"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad Request"
        409:
          description: "Conflict"
        500:
          description: "Server Error"

  # [GET] users/id
  /users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
      responses:
        200:
          description: "OK"
        409:
          description: "Conflict"
        500:
          description: "Server Error"

    # [PUT] users/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: "#/definitions/users"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad Request"
        409:
          description: "Conflict"
        500:
          description: "Server Error"

    # [DELETE] users/id
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
      responses:
        200:
          description: "OK"
        409:
          description: "Conflict"
        500:
          description: "Server Error"

# definitions
definitions:
  users:
    type: object
    required: -email
      -password
      -name
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
  product:
    type: object
    required: -name
      -price
      -description
      -image
      -quantity
    properties:
      name:
        type: string
        description: product Name
      price:
        type: integer
        description: product Price
      description:
        type: string
        description: product Description
      image:
        type: string
        description: product Image
      quantity:
        type: integer
        description: product Quantity
  event:
    type: object
    required: -name
      -date
      -place
      -Department
    properties:
      name:
        type: string
        description: event Name
      date:
        type: string
        description: event Date
      place:
        type: string
        description: event Place
      Department:
        type: string
        description: event Department
schemes:
  - https
  - http
